module fixed_priority_Arbiter_fixed_time_slices_test;
  reg clk;
  reg rst_n;
  reg [3:0] REQ;
  wire [3:0] GNT;
  
  //Instantiate Design Under Test
  round_robin_arbiter_fixed_time_slices DUT(.clk(clk), .rst_n(rst_n), .REQ(REQ), .GNT(GNT));

  always #5 clk = ~clk;    //Generate a 10 ns  Time Period Clock
  
  //Drive the DUT or Generate stimuli for the DUT
  initial begin
    clk = 0;
    rst_n = 1;
    REQ = 4'b0;
    // Assert the Asynchronous Reset after 1 clock period 
    #10 rst_n = 0;
    //Deassert the Reset
    #5 rst_n = 1;
    
    @(negedge clk) REQ = 4'b1000;    
    @(negedge clk) REQ = 4'b1010;
    @(negedge clk) REQ = 4'b0010;
    @(negedge clk) REQ = 4'b0110;
    @(negedge clk) REQ = 4'b1110;
    @(negedge clk) REQ = 4'b1111;
    @(negedge clk) REQ = 4'b0100;
    @(negedge clk) REQ = 4'b0010;
    #5 rst_n = 0;

    #100 $finish;
  end
  
   initial begin
    // below two lines are used to show waveform
    $dumpfile("dump.vcd");
     $dumpvars(1);
  end
  
endmodule
    
    
  
